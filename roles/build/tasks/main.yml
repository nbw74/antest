---
- name: Flavour vars loaded
  include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ build_flavour }}.yml"
        - "el.{{ build_flavour.split('.')|last }}.yml"
    - paths:
        - "{{ role_path }}/vars"

- name: Flavour pre-install tasks included
  include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ build_flavour }}_pre.yml"
        - empty.yml
    - paths:
        - "{{ role_path }}/tasks"

- name: Install required packages
  when: not build_force_dnf
  package:
    name: "{{ build__packages_common|union(build__packages) }}"

- name: Install required packages with forced dnf
  when: build_force_dnf
  dnf:
    name: "{{ build__packages_common|union(build__packages) }}"

- name: Cleanup package manager cache
  command:
    argv:
      - "{{ ansible_pkg_mgr }}"
      - clean
      - all

- name: Flavour post-install tasks included
  include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ build_flavour }}_post.yml"
        - empty.yml
    - paths:
        - "{{ role_path }}/tasks"

- name: Create locale
  command:
    argv:
      - localedef
      - --inputfile=en_US
      - --charmap=UTF-8
      - en_US.UTF-8

- name: Create ssh host keys
  when: not build_skip_ssh_host_keys
  command:
    argv:
      - ssh-keygen
      - -A

- name: Set up SSH port
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^.*Port 22.*$'
    line: 'Port 2222'

- name: SSH service enabled
  when: not build_skip_ssh_service
  service:
    name: sshd
    enabled: true

- name: Create ansible user
  user:
    name: ansible
    groups: wheel

- name: Setup sudoer for ansible
  community.general.sudoers:
    name: ansible
    user: ansible
    commands: ALL

- name: Authorized key copied
  ansible.posix.authorized_key:
    user: ansible
    exclusive: true
    manage_dir: true
    key: "{{ build__ssh_key }}"
...
