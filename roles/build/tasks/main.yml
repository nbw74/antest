---
- name: OS_family vars included
  include_vars:
    file: "{{ build_os_family }}.yml"

- name: Flavour vars loaded
  include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ build_distribution }}-{{ build_major_version }}.yml"
        - "{{ build_os_family }}-{{ build_major_version }}.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Flavour pre-install tasks included
  include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ build_distribution }}-{{ build_major_version }}_pre.yml"
      skip: true
      paths:
        - "{{ role_path }}/tasks"

- name: OS_family tasks included
  include_tasks:
    file: "{{ build_os_family }}.yml"

- name: Flavour post-install tasks included
  include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ build_distribution }}-{{ build_major_version }}_post.yml"
      skip: true
      paths:
        - "{{ role_path }}/tasks"

- name: Create ssh host keys
  when: not build_skip_ssh_host_keys
  command:
    argv:
      - ssh-keygen
      - -A

- name: Set up SSH port
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^.*Port 22.*$'
    line: 'Port {{ build_ssh_port }}'
    create: false

- name: SSH service enabled
  when: not build_skip_ssh_service
  service:
    name: "{{ build__ssh_service_name }}"
    enabled: true

- name: Create ansible user
  user:
    name: ansible
    groups: "{{ build__wheel_group_name }}"

- name: Setup sudoer for ansible
  community.general.sudoers:
    name: ansible
    user: ansible
    commands: ALL
    runas: ALL

- name: Authorized key copied
  ansible.posix.authorized_key:
    user: ansible
    exclusive: true
    manage_dir: true
    key: "{{ build__ssh_key }}"
...
