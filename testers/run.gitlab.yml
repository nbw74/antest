# vim: set ft=yaml.ansible:
# Requirements:
# ansible-galaxy collection install ansible.posix
# ansible-galaxy collection install containers.podman
---
- name: Run gitlab container with podman
  hosts: localhost
  gather_subset: [ 'min' ]
  diff: true

  collections:
    - ansible.posix
    - containers.podman

  vars:
    ansible_connection: local
    gitlab_flavour: ce
    gitlab_server_image: "docker.io/gitlab/gitlab-ce:17.0.3-ce.0"
    gitlab_runner_image: "docker.io/gitlab/gitlab-runner:alpine-v16.11.2"
    gitlab_home: "{{ lookup('env', 'HOME') }}/gitlab-{{ gitlab_flavour }}-test"
    runner_home: "{{ lookup('env', 'HOME') }}/gitlab-{{ gitlab_flavour }}-test-runner"
    runner_concurrency: "10"
    run_gitlab_set_sysctl: false
    run_gitlab_state: undefined
    runner_name: shell.samepod.localhost

  tasks:
    - name: Define complex
      when: run_gitlab_state in [ 'started', 'stopped' ]
      block:
        - name: Define network
          podman_network:
            name: "gitlab-{{ gitlab_flavour }}-test"
            subnet: 10.20.30.0/24

        - name: Create dirs
          file:
            state: directory
            path: "{{ item }}"
          loop:
            - "{{ gitlab_home }}/config"
            - "{{ gitlab_home }}/logs"
            - "{{ gitlab_home }}/data"
            - "{{ runner_home }}/config"

        - name: Set sysctl port range start
          when: run_gitlab_set_sysctl
          become: true
          sysctl:
            name: net.ipv4.ip_unprivileged_port_start
            value: '80'
            sysctl_set: true

        - name: Define pod
          podman_pod:
            name: "gitlab-{{ gitlab_flavour }}-test"
            network: "gitlab-{{ gitlab_flavour }}-test"
            publish:
              - "80:80"
              - "443:443"
              - "2222:22"

        - name: Manage server container
          register: __run_gitlab_server_return
          containers.podman.podman_container:
            name: gitlab
            pod: "gitlab-{{ gitlab_flavour }}-test"
            image: "{{ gitlab_server_image }}"
            state: "{{ run_gitlab_state }}"
            volume:
              - "{{ gitlab_home }}/config:/etc/gitlab"
              - "{{ gitlab_home }}/logs:/var/log/gitlab"
              - "{{ gitlab_home }}/data:/var/opt/gitlab"
            env:
              GITLAB_OMNIBUS_CONFIG: >-
                alertmanager['enable'] = false;
                gitlab_exporter['enable'] = false;
                gitlab_rails['monitoring_whitelist'] = ['0.0.0.0/0'];
                grafana['enable'] = false;
                node_exporter['enable'] = false;
                pgbouncer_exporter['enable'] = false;
                postgres_exporter['enable'] = false;
                prometheus['enable'] = false;
                redis_exporter['enable'] = false;

        - name: Manage runner container
          register: __run_gitlab_runner_return
          podman_container:
            name: runner
            pod: "gitlab-{{ gitlab_flavour }}-test"
            image: "{{ gitlab_runner_image }}"
            state: "{{ run_gitlab_state }}"
            volume:
              - "{{ runner_home }}/config:/etc/gitlab-runner"

    - name: Wait for GitLab API is ready
      register: __run_gitlab_readiness
      until: __run_gitlab_readiness.status|int == 200
      retries: 200
      delay: 5
      when: run_gitlab_state in [ 'started' ]
      uri:
        url: "http://localhost/-/readiness"

    - name: Registration block
      delegate_to: "{{ __run_gitlab_runner_return.container.Id }}"
      when: run_gitlab_state in [ 'started' ]
      vars:
        ansible_connection: podman
      block:
        - name: Install python interpreter
          raw: >
            apk add python3
          register: __run_gitlab_runner_raw
          changed_when: __run_gitlab_runner_raw.stdout_lines|length > 1

        - name: Fix gitlab-runner homedir permissions
          file:
            path: /home/gitlab-runner
            state: directory
            owner: gitlab-runner
            group: root
            mode: "0700"

        - name: Get runners list
          register: __run_gitlab_runners_list
          changed_when: false
          command: >
            gitlab-runner list

        - name: Registration block
          when: __run_gitlab_runners_list.stderr is not search(runner_name|string)
          block:
            - name: Obtain registration token
              delegate_to: "{{ __run_gitlab_server_return.container.Id }}"
              register: __run_gitlab_runner_reg_token
              command: >
                gitlab-rails runner -e production
                "puts Gitlab::CurrentSettings.current_application_settings.runners_registration_token"

            - name: Register runner if not registered
              command: >
                gitlab-runner register --non-interactive
              environment:
                CI_SERVER_URL: http://127.0.0.1/
                REGISTRATION_TOKEN: "{{ __run_gitlab_runner_reg_token.stdout }}"
                RUNNER_EXECUTOR: shell
                RUNNER_NAME: "{{ runner_name }}"
                RUNNER_TAG_LIST: samepod_shell
                REGISTER_LOCKED: "false"

        - name: Set jobs concurrency
          lineinfile:
            path: /etc/gitlab-runner/config.toml
            regexp: 'concurrent ='
            line: "concurrent = {{ runner_concurrency|d('1') }}"

    - name: Undefine complex
      when: run_gitlab_state in [ 'undefined' ]
      block:
        - name: Undefine container
          podman_container:
            name: gitlab
            pod: "gitlab-{{ gitlab_flavour }}-test"
            state: absent

        - name: Undefine pod
          podman_pod:
            name: "gitlab-{{ gitlab_flavour }}-test"
            state: absent

        - name: Remove dirs
          become: true
          diff: false
          file:
            state: absent
            path: "{{ item }}"
          loop:
            - "{{ gitlab_home }}/config"
            - "{{ gitlab_home }}/logs"
            - "{{ gitlab_home }}/data"
            - "{{ runner_home }}/config"

        - name: Undefine network
          podman_network:
            name: "gitlab-{{ gitlab_flavour }}-test"
            state: absent
...
